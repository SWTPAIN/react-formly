{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-formly.min.js","webpack:///webpack/bootstrap 1afa46fa5ce149590756","webpack:///./index.js","webpack:///./src/modules/FormlyConfig.js","webpack:///./src/components/Formly.js","webpack:///./src/mixins/FieldMixin.js","webpack:///external \"react\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Formly","FieldMixin","FormlyConfig","addFieldType","name","field","Array","isArray","forEach","fieldType","fieldTypeMap","getFieldTypes","clearTypes","oldTypes","fields","addType","getTypes","typeOrComponent","props","propName","componentName","errorPrefix","key","type","component","Error","generateFieldTag","model","onValueUpdate","fieldComponent","shouldHide","getComponent","componentProps","FieldComponent","React","createElement","__spread","config","hide","isOrInvoke","property","hasOwnProperty","createClass","displayName","propTypes","onFormlyUpdate","PropTypes","func","isRequired","shape","string","arrayOf","hidden","oneOfType","bool","object","data","getDefaultProps","fieldKey","value","render","map","className","role","getValue","node","checked","selected","onChange","event","target","updateValue","transformUpdate"],"mappings":"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","file":"react-formly.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactFormly\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactFormly\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactFormly\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactFormly\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports.Formly = __webpack_require__(2);\n\tmodule.exports.FieldMixin = __webpack_require__(3);\n\tmodule.exports.FormlyConfig = __webpack_require__(1);\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar fieldTypeMap = {};\n\t\n\tmodule.exports = {\n\t  fields: {\n\t    addType: addFieldType,\n\t    getTypes: getFieldTypes,\n\t    clearTypes: clearTypes\n\t  }\n\t};\n\t\n\tfunction addFieldType(name, field) {\n\t  if (Array.isArray(name)) {\n\t    name.forEach(function(fieldType) {\n\t      addFieldType(fieldType);\n\t    });\n\t  } else if (typeof name === 'object') {\n\t    field = name.field;\n\t    name = name.name;\n\t  }\n\t  fieldTypeMap[name] = field;\n\t}\n\t\n\tfunction getFieldTypes() {\n\t  return fieldTypeMap;\n\t}\n\t\n\tfunction clearTypes() {\n\t  var oldTypes = fieldTypeMap;\n\t  fieldTypeMap = {};\n\t  return oldTypes;\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @jsx React.DOM */\n\t'use strict';\n\t\n\tvar React = __webpack_require__(4);\n\tvar FormlyConfig = __webpack_require__(1);\n\t\n\tfunction typeOrComponent(props, propName, componentName) {\n\t  var errorPrefix = componentName + ' config.fields field with key ' + props.key;\n\t  if (props.type && props.component) {\n\t    return new Error(errorPrefix + ' should only have either a type or a component, not both.');\n\t  } else if (!props.type && !props.component) {\n\t    return new Error(errorPrefix + ' should have either a type (string) or a component (React component)');\n\t  }\n\t}\n\t\n\tvar Formly = React.createClass({displayName: \"Formly\",\n\t  propTypes: {\n\t    onFormlyUpdate: React.PropTypes.func.isRequired,\n\t    config: React.PropTypes.shape({\n\t      name: React.PropTypes.string,\n\t      fields: React.PropTypes.arrayOf(React.PropTypes.shape({\n\t        key: React.PropTypes.string.isRequired,\n\t        type: typeOrComponent,\n\t        component: typeOrComponent,\n\t        hidden: React.PropTypes.oneOfType([\n\t          React.PropTypes.bool,\n\t          React.PropTypes.func\n\t        ]),\n\t        props: React.PropTypes.oneOfType([\n\t          React.PropTypes.object,\n\t          React.PropTypes.func\n\t        ]),\n\t        data: React.PropTypes.object\n\t      }))\n\t    }),\n\t    model: React.PropTypes.object\n\t  },\n\t\n\t  getDefaultProps: function() {\n\t    return { model: {} };\n\t  },\n\t\n\t  onValueUpdate: function(fieldKey, value) {\n\t    this.props.model[fieldKey] = value;\n\t    this.props.onFormlyUpdate(this.props.model);\n\t  },\n\t\n\t  render: function() {\n\t    var model = this.props.model;\n\t    var onValueUpdate = this.onValueUpdate;\n\t    var fields = this.props.config.fields.map(function(field) {\n\t      return generateFieldTag(field, model, onValueUpdate);\n\t    });\n\t    return React.createElement(\"form\", {className: \"formly\", role: \"form\", name: this.props.config.name}, fields);\n\t  }\n\t});\n\t\n\tfunction generateFieldTag(field, model, onValueUpdate) {\n\t  var fieldComponent = field.component ? field.component : FormlyConfig.fields.getTypes()[field.type];\n\t  if (!fieldComponent) {\n\t    throw new Error('Formly: \"' + field.type + '\" has not been added to FormlyConfig\\'s field types.');\n\t  }\n\t\n\t  if (shouldHide(field, model)) {\n\t    return null;\n\t  }\n\t\n\t  return getComponent(fieldComponent, field, model, onValueUpdate);\n\t}\n\t\n\tfunction getComponent(fieldComponent, field, model, onValueUpdate) {\n\t\n\t  var componentProps;\n\t  if (field.props) {\n\t    componentProps = typeof field.props === 'function' ? field.props(model, field) : field.props;\n\t  }\n\t\n\t  //assign to variable to allow JSX compiler to pick up as a prop instead of string\n\t  var FieldComponent = fieldComponent;\n\t  var component = React.createElement(FieldComponent, React.__spread({},  componentProps, {model: model, config: field, onValueUpdate: onValueUpdate, key: field.key}));\n\t\n\t  return component;\n\t}\n\t\n\tfunction shouldHide(field, model) {\n\t  var hide = isOrInvoke(field, 'hidden', model);\n\t  return hide && hide !== null;\n\t}\n\t\n\tfunction isOrInvoke(field, property, model) {\n\t  if (!field.hasOwnProperty(property)) {\n\t    return null;\n\t  }\n\t  if (typeof field[property] === 'function') {\n\t    return field[property](model, field);\n\t  } else {\n\t    return !!field[property];\n\t  }\n\t}\n\t\n\tmodule.exports = Formly;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar FieldMixin = {\n\t  onChange: function(event) {\n\t    var value = getValue(event.target);\n\t    this.updateValue(value);\n\t  },\n\t  updateValue: function(value) {\n\t    if (this.transformUpdate) {\n\t      value = this.transformUpdate(value);\n\t    }\n\t    this.props.onValueUpdate(this.props.config.key, value);\n\t  }\n\t};\n\t\n\tfunction getValue(node) {\n\t  switch(node.type) {\n\t    case 'checkbox':\n\t    case 'radio':\n\t      return node.checked;\n\t    case 'select':\n\t      return node.selected;\n\t    default:\n\t      return node.value;\n\t  }\n\t}\n\t\n\tmodule.exports = FieldMixin;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-formly.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1afa46fa5ce149590756\n **/","module.exports.Formly = require('./src/components/Formly');\nmodule.exports.FieldMixin = require('./src/mixins/FieldMixin');\nmodule.exports.FormlyConfig = require('./src/modules/FormlyConfig');\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar fieldTypeMap = {};\n\nmodule.exports = {\n  fields: {\n    addType: addFieldType,\n    getTypes: getFieldTypes,\n    clearTypes: clearTypes\n  }\n};\n\nfunction addFieldType(name, field) {\n  if (Array.isArray(name)) {\n    name.forEach(function(fieldType) {\n      addFieldType(fieldType);\n    });\n  } else if (typeof name === 'object') {\n    field = name.field;\n    name = name.name;\n  }\n  fieldTypeMap[name] = field;\n}\n\nfunction getFieldTypes() {\n  return fieldTypeMap;\n}\n\nfunction clearTypes() {\n  var oldTypes = fieldTypeMap;\n  fieldTypeMap = {};\n  return oldTypes;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/FormlyConfig.js\n **/","/** @jsx React.DOM */\n'use strict';\n\nvar React = require('react');\nvar FormlyConfig = require('./../modules/FormlyConfig');\n\nfunction typeOrComponent(props, propName, componentName) {\n  var errorPrefix = componentName + ' config.fields field with key ' + props.key;\n  if (props.type && props.component) {\n    return new Error(errorPrefix + ' should only have either a type or a component, not both.');\n  } else if (!props.type && !props.component) {\n    return new Error(errorPrefix + ' should have either a type (string) or a component (React component)');\n  }\n}\n\nvar Formly = React.createClass({\n  propTypes: {\n    onFormlyUpdate: React.PropTypes.func.isRequired,\n    config: React.PropTypes.shape({\n      name: React.PropTypes.string,\n      fields: React.PropTypes.arrayOf(React.PropTypes.shape({\n        key: React.PropTypes.string.isRequired,\n        type: typeOrComponent,\n        component: typeOrComponent,\n        hidden: React.PropTypes.oneOfType([\n          React.PropTypes.bool,\n          React.PropTypes.func\n        ]),\n        props: React.PropTypes.oneOfType([\n          React.PropTypes.object,\n          React.PropTypes.func\n        ]),\n        data: React.PropTypes.object\n      }))\n    }),\n    model: React.PropTypes.object\n  },\n\n  getDefaultProps: function() {\n    return { model: {} };\n  },\n\n  onValueUpdate: function(fieldKey, value) {\n    this.props.model[fieldKey] = value;\n    this.props.onFormlyUpdate(this.props.model);\n  },\n\n  render: function() {\n    var model = this.props.model;\n    var onValueUpdate = this.onValueUpdate;\n    var fields = this.props.config.fields.map(function(field) {\n      return generateFieldTag(field, model, onValueUpdate);\n    });\n    return <form className=\"formly\" role=\"form\" name={this.props.config.name}>{fields}</form>;\n  }\n});\n\nfunction generateFieldTag(field, model, onValueUpdate) {\n  var fieldComponent = field.component ? field.component : FormlyConfig.fields.getTypes()[field.type];\n  if (!fieldComponent) {\n    throw new Error('Formly: \"' + field.type + '\" has not been added to FormlyConfig\\'s field types.');\n  }\n\n  if (shouldHide(field, model)) {\n    return null;\n  }\n\n  return getComponent(fieldComponent, field, model, onValueUpdate);\n}\n\nfunction getComponent(fieldComponent, field, model, onValueUpdate) {\n\n  var componentProps;\n  if (field.props) {\n    componentProps = typeof field.props === 'function' ? field.props(model, field) : field.props;\n  }\n\n  //assign to variable to allow JSX compiler to pick up as a prop instead of string\n  var FieldComponent = fieldComponent;\n  var component = <FieldComponent {...componentProps} model={model} config={field} onValueUpdate={onValueUpdate} key={field.key} />;\n\n  return component;\n}\n\nfunction shouldHide(field, model) {\n  var hide = isOrInvoke(field, 'hidden', model);\n  return hide && hide !== null;\n}\n\nfunction isOrInvoke(field, property, model) {\n  if (!field.hasOwnProperty(property)) {\n    return null;\n  }\n  if (typeof field[property] === 'function') {\n    return field[property](model, field);\n  } else {\n    return !!field[property];\n  }\n}\n\nmodule.exports = Formly;\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Formly.js\n **/","'use strict';\n\nvar FieldMixin = {\n  onChange: function(event) {\n    var value = getValue(event.target);\n    this.updateValue(value);\n  },\n  updateValue: function(value) {\n    if (this.transformUpdate) {\n      value = this.transformUpdate(value);\n    }\n    this.props.onValueUpdate(this.props.config.key, value);\n  }\n};\n\nfunction getValue(node) {\n  switch(node.type) {\n    case 'checkbox':\n    case 'radio':\n      return node.checked;\n    case 'select':\n      return node.selected;\n    default:\n      return node.value;\n  }\n}\n\nmodule.exports = FieldMixin;\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixins/FieldMixin.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}